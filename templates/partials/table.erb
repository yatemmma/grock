<% if admin? %>
  <div class="admin" style="margin:16px;">
    <a href="./<%= type %>/new">[Create New Item]</a>
  </div>
<% end %>

<table id="items">
  <thead>
    <tr class="hidden-on-mobile">
      <% headers.each do |header| %>
        <th>
          <input id="search-<%= header[:key] %>" type="text" placeholder="<%= header[:name] %>"></input>
          <a onclick="sort('<%= header[:key] %>')"><i class="fas fa-sort"></i></a>
        </th>
      <% end %>
    </tr>
  </thead>
  <tbody>
    <% @items.each_with_index do |(code, item), i| %>
      <tr class="<%= "odd" unless i%2 == 0 %>">
      <% headers.each do |header| %>
        <td class="<%= "hidden-on-mobile" unless header[:mobile] %>">
          <%= item.send(header[:key].to_sym) %>
        </td>
      <% end %>
      </tr>
    <% end %>
  <tbody>
</table>

<script>
Array.from(document.querySelectorAll("#items input")).forEach((element)=>{
  element.addEventListener("keypress", function(event) {
    filter(event.target.id.split("-")[1], event.target.value + event.key)
  })
  element.addEventListener("keyup", function(event) {
    if (event.keyCode == 46 || event.keyCode == 8) {
      filter(event.target.id.split("-")[1], event.target.value)
    }
  })
})

const headers = [
  <%= headers.map {|header| "{ \"key\":\"#{header[:key]}\",\"mobile\":#{header[:mobile]} }" }.join(",") %>
]
const items = [
  <%= @items.map {|code, item| item.to_search }.join(",") %>
]
const filterConditions = {}
const sortConditions = {}
const sortOrders = []

function filter(key, value) {
  filterConditions[key] = value
  updateTable(headers, items, filterConditions, sortConditions, sortOrders)
}

function sort(key) {
  const index = sortOrders.indexOf(key)
  if (index >= 0) {
    sortOrders.splice(index, 1)
  }
  sortOrders.push(key)
  sortConditions[key] = !sortConditions[key]
  updateTable(headers, items, filterConditions, sortConditions, sortOrders)
}

function updateTable(headers, items, filterConditions, sortConditions, sortOrders) {
  function sortByConditions(items, sortConditions, sortOrders) {
    let sorted = items
    sortOrders.reverse().forEach((key)=>{
      sorted = sorted.sort((a, b)=> {
        const objA = (a[key] || "").toString().toUpperCase()
        const objB = (b[key] || "").toString().toUpperCase()
        if (objA < objB) {
          return -1 * (sortConditions[key] ? -1 : 1)
        }
        if (objA > objB) {
          return 1 * (sortConditions[key] ? -1 : 1)
        }
        return 0
      })
    })
    return sorted
  }

  function isFilteredItem(item, filterConditions) {
    for (let key in filterConditions) {
      if (filterConditions[key]) {
        const found = (item[key].toLowerCase().indexOf(filterConditions[key].toLowerCase()) >= 0)
        if (!found) {
          return false
        }
      }
    }
    return true
  }
  const tbody = document.querySelector("#items tbody")
  while (tbody.firstChild) {
    tbody.removeChild(tbody.firstChild)
  }
  let i = 0
  sortByConditions(items, sortConditions, sortOrders).forEach((item)=>{
    if (isFilteredItem(item, filterConditions)) {
      const tr = document.createElement("tr")
      if (i%2 !== 0) {
        tr.classList.add("odd")
      }
      headers.forEach((header)=>{
        const td = document.createElement("td")
        if (!header.mobile) {
          td.classList.add("hidden-on-mobile")
        }
        td.innerHTML = item[header.key]
        tr.appendChild(td)
      })
      tbody.appendChild(tr)
      i++
    }
  })
}
</script>
